{
  "global_workflows": {
    "system_health_check": {
      "description": "Comprehensive system health and performance check",
      "steps": [
        {
          "agent": "SecurityAuditorAgent",
          "command": "security_scan",
          "description": "Run security vulnerability scan",
          "config": {
            "scan_type": "basic",
            "include_dependencies": true
          }
        },
        {
          "agent": "PerformanceProfilerAgent", 
          "command": "performance_audit",
          "description": "Analyze system performance metrics",
          "config": {
            "metrics": ["response_time", "memory_usage", "cpu_usage"],
            "duration": 60
          }
        },
        {
          "agent": "QualityTesterAgent",
          "command": "run_test_suite",
          "description": "Execute comprehensive test suite",
          "config": {
            "test_types": ["unit", "integration", "functional"],
            "coverage_threshold": 80
          }
        }
      ]
    },
    "project_setup": {
      "description": "Initialize new project with standard configuration",
      "steps": [
        {
          "agent": "SystemArchitectAgent",
          "command": "analyze_requirements", 
          "description": "Analyze project requirements and constraints",
          "config": {
            "include_dependencies": true,
            "check_conflicts": true
          }
        },
        {
          "agent": "FeatureDeveloperAgent",
          "command": "create_project_structure",
          "description": "Create standard project directory structure",
          "config": {
            "include_tests": true,
            "include_docs": true,
            "create_gitignore": true
          }
        },
        {
          "agent": "QualityTesterAgent",
          "command": "setup_testing_framework",
          "description": "Configure testing framework and initial tests",
          "config": {
            "framework": "auto_detect",
            "create_sample_tests": true
          }
        }
      ]
    }
  },
  "agent_definitions": {
    "SystemArchitectAgent": {
      "emoji": "üèóÔ∏è",
      "role": "System design and architecture validation",
      "capabilities": ["architecture_review", "performance_optimization", "technical_debt_analysis"]
    },
    "FeatureDeveloperAgent": {
      "emoji": "‚ö°",
      "role": "Feature implementation and development",
      "capabilities": ["code_implementation", "feature_development", "bug_fixes"]
    },
    "TechnicalSEOAgent": {
      "emoji": "üîß", 
      "role": "Technical SEO optimization and analysis",
      "capabilities": ["site_audit", "performance_optimization", "crawling_analysis"]
    },
    "KeywordStrategyAgent": {
      "emoji": "üîë",
      "role": "SEO keyword research and strategy",
      "capabilities": ["keyword_research", "competitive_analysis", "content_strategy"]
    },
    "MetricsReporterAgent": {
      "emoji": "üìä",
      "role": "Analytics and metrics reporting",
      "capabilities": ["data_analysis", "report_generation", "dashboard_creation"]
    },
    "PerformanceProfilerAgent": {
      "emoji": "‚ö°",
      "role": "Performance analysis and optimization",
      "capabilities": ["performance_profiling", "bottleneck_identification", "optimization_recommendations"]
    },
    "QualityTesterAgent": {
      "emoji": "üß™",
      "role": "Quality assurance and testing",
      "capabilities": ["test_execution", "test_creation", "quality_validation"]
    },
    "InterfaceDesignerAgent": {
      "emoji": "üé®",
      "role": "Interface design and UX planning", 
      "capabilities": ["ui_design", "ux_planning", "design_system_creation"]
    },
    "FrontendImplementerAgent": {
      "emoji": "üñºÔ∏è",
      "role": "Frontend implementation and UI building",
      "capabilities": ["frontend_implementation", "ui_coding", "responsive_design"]
    },
    "InteractionEnhancerAgent": {
      "emoji": "üéØ",
      "role": "User experience improvements and interaction design",
      "capabilities": ["ux_optimization", "interaction_design", "usability_testing"]
    },
    "ResponsiveAdapterAgent": {
      "emoji": "üì±",
      "role": "Mobile optimization and responsive design",
      "capabilities": ["responsive_implementation", "mobile_optimization", "device_testing"]
    },
    "SecurityAuditorAgent": {
      "emoji": "üîí",
      "role": "Security analysis and vulnerability assessment",
      "capabilities": ["security_scanning", "vulnerability_assessment", "security_recommendations"]
    }
  },
  "workflow_execution": {
    "default_timeout": 300,
    "max_retries": 3,
    "parallel_execution": false,
    "continue_on_failure": false,
    "log_level": "info"
  },
  "integration_settings": {
    "todowrite_integration": true,
    "agent_switching": true,
    "progress_tracking": true,
    "result_caching": true
  }
}